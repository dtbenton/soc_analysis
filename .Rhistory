rm(list=ls())
library(lme4)
library(nlme)
library(boot)
library(car)
library(reshape2)
library(ggplot2)
library(ez)
library(plyr)
library(ggsignif)
library(lsr)
library(sjmisc)
library(sjstats)
library(BayesFactor)
options(scipen=9999)
######################
# data preprocessing #
######################
# load data
D = read.csv(file.choose(), header = TRUE)
dim(D)
D = D[1:48,]
D$sex = as.factor(D$sex)
# effective_object_demonstrated_first
D$effective_object_demonstrated_first = revalue(x = as.factor(D$effective_object_demonstrated_first),
c("0" = "No", "1"="Yes"))
# feature_appended_to_correct_object
D$feature_appended_to_correct_object = revalue(x = as.factor(D$feature_appended_to_correct_object),
c("0" = "Circle", "1"="Diamond"))
# correct_test_object_location
D$correct_test_object_location = revalue(x = as.factor(D$correct_test_object_location),
c("0" = "Left", "1"="Right"))
# test_choice
D$test_choice = revalue(x = as.factor(D$test_choice),
c("0" = "Incorrect", "1"="Correct"))
# memory_check
D$memory_check = revalue(x = as.factor(D$memory_check),
c("0" = "Incorrect", "1"="Correct"))
# age
D$age = as.factor(D$age)
# subset data to obtain two dataframes for 2 and 3 year olds #
D.2yo = subset(D, ! age %in% c("3"))    # This creates a subsetted dataframe
# containing only the data of the 2-year-olds
D.2yo = subset(D.2yo, ! memory_check %in% c("Incorrect"))
D.3yo = subset(D, ! age %in% c("2")) # This creates a subsetted dataframe
# containing only the data of the 2-year-olds
D.3yo = subset(D.3yo, ! memory_check %in% c("Incorrect"))
dim(D.2yo)
rm(list=ls())
library(lme4)
library(nlme)
library(boot)
library(car)
library(reshape2)
library(ggplot2)
library(ez)
library(plyr)
library(ggsignif)
library(lsr)
library(sjmisc)
library(sjstats)
library(BayesFactor)
options(scipen=9999)
######################
# data preprocessing #
######################
# load data
D = read.csv(file.choose(), header = TRUE)
D = D[1:48,]
D$sex = as.factor(D$sex)
# effective_object_demonstrated_first
D$effective_object_demonstrated_first = revalue(x = as.factor(D$effective_object_demonstrated_first),
c("0" = "No", "1"="Yes"))
# feature_appended_to_correct_object
D$feature_appended_to_correct_object = revalue(x = as.factor(D$feature_appended_to_correct_object),
c("0" = "Circle", "1"="Diamond"))
# correct_test_object_location
D$correct_test_object_location = revalue(x = as.factor(D$correct_test_object_location),
c("0" = "Left", "1"="Right"))
# test_choice
D$test_choice = revalue(x = as.factor(D$test_choice),
c("0" = "Incorrect", "1"="Correct"))
# memory_check
D$memory_check = revalue(x = as.factor(D$memory_check),
c("0" = "Incorrect", "1"="Correct"))
# age
D$age = as.factor(D$age)
# subset data to obtain two dataframes for 2 and 3 year olds #
D.2yo = subset(D, ! age %in% c("3"))    # This creates a subsetted dataframe
# containing only the data of the 2-year-olds
dim(D.2yo)
glmer_global_boot = function(x){ # 'x' is
glmer.fit = x                  # e.G., x = glmer(y~x+(1|ID),data=d,family="binomial")
glmer.fun = function(fit){
return(fixef(fit))
}
result = bootMer(glmer.fit, glmer.fun, nsim = 4000)
return(result)
}
table(D$test_choice)
glm.fit = glm(test_choice~sex+condition+effective_object_demonstrated_first+
feature_appended_to_correct_object+correct_test_object_location,
data=D, family="binomial",
na.action = na.omit)
summary(glm.fit)
names(D)
glm.fit = glm(test_choice~sex+condition+effective_object_demonstrated_first+
feature_appended_to_correct_object+correct_test_object_location+age,
data=D, family="binomial",
na.action = na.omit)
summary(glm.fit)
glm.fit = glm(test_choice~age,
data=D, family="binomial",
na.action = na.omit)
summary(glm.fit)
table(D$test_choice)
29/(19+29)
log(29/(19+29))
fix(D)
# get distribution of successes and failure
table(D$test_choice[D$age==c("2","3")])
13+11
log(11/24)
table(D$test_choice[D$age==c("2")])
log(20/30)
20/30
s = 20/30
s/(1-s)
log(2)
exp(log(2))
D.3yo = subset(D, ! age %in% c("2"))
dim(D.3yo)
